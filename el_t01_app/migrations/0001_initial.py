# Generated by Django 3.2.8 on 2023-09-04 16:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import el_t01_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='APIExtPage',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('caption', models.CharField(max_length=100, verbose_name='Page name')),
                ('allowed_companies', models.TextField(blank=True, default='', verbose_name='List of allowed companies')),
                ('template', models.CharField(max_length=250, verbose_name='Template')),
                ('add_param', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='BalanceOperation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(blank=True, null=True)),
                ('confirm', models.DateTimeField(blank=True, null=True)),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Amount')),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('pay_response', models.TextField(blank=True, default='', null=True)),
                ('t_create', models.BooleanField(default=False, verbose_name='Manager')),
                ('t_create_dt', models.DateTimeField(blank=True, null=True, verbose_name='Date Manager create')),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='Blogger',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=100, verbose_name='Full name')),
                ('phone', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Phone')),
                ('accounts', models.JSONField(blank=True, default=dict, null=True, verbose_name='Social media accounts')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='Notes')),
                ('ref_hash', models.CharField(default='', max_length=100, unique=True)),
                ('ref_link', models.CharField(default='', max_length=250)),
                ('add_params', models.JSONField(blank=True, default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BloggerType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('caption', models.CharField(default='', max_length=100)),
                ('verbal', models.CharField(default='', max_length=50)),
                ('description', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='BotMessageManagers',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('add_param', models.JSONField(blank=True, default=dict)),
            ],
        ),
        migrations.CreateModel(
            name='Cabala_history',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('cab_id', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Code')),
                ('cab_dt', models.DateTimeField(blank=True, null=True, verbose_name='Date')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Amount')),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Devices_list',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('verbal', models.CharField(blank=True, default='', max_length=20, null=True, unique=True, verbose_name='Code')),
                ('caption', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Caption')),
                ('status', models.CharField(blank=True, choices=[('00', 'READY'), ('01', 'BUSY')], default='', max_length=2, null=True, verbose_name='Status')),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('settings', models.JSONField(blank=True, default=dict, null=True)),
                ('ipadres', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ip адрес')),
                ('config_data', models.JSONField(blank=True, default=dict, null=True)),
                ('api_token', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Api Token')),
                ('type_run', models.CharField(blank=True, choices=[('00', 'PRODUCT'), ('01', 'DEBUG')], default='', max_length=2, null=True, verbose_name='Режим работы')),
                ('step_knife', models.IntegerField(default=0, verbose_name='Шаг ножа')),
                ('scratch', models.BooleanField(default=False, verbose_name='Scratch ticket')),
                ('dmove', models.BooleanField(default=False, verbose_name='Move ticket')),
                ('dmove_type', models.CharField(blank=True, default='', max_length=2, null=True, verbose_name='Move type')),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Discount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('verbal', models.CharField(max_length=50, verbose_name='Verbal code')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('caption', models.CharField(default='', max_length=100, verbose_name='Caption')),
                ('caption_user', models.CharField(default='', max_length=100, verbose_name='Caption for user')),
                ('start_date', models.DateTimeField(verbose_name='Valid from')),
                ('stop_date', models.DateTimeField(verbose_name='Valid to')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountHistory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('all_users', models.BooleanField(default=True, verbose_name='Discount fo all users')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Valid from')),
                ('stop_date', models.DateTimeField(blank=True, null=True, verbose_name='Valid to')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('discount', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='discount_history', to='el_t01_app.discount', verbose_name='Discount type')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='discount_user', to=settings.AUTH_USER_MODEL, verbose_name='Specific user')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountOwner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('caption', models.CharField(default='', max_length=100)),
                ('verbal', models.CharField(default='', max_length=30)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
            ],
        ),
        migrations.CreateModel(
            name='Documentation_list',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('caption', models.CharField(default='', max_length=100)),
                ('verbal', models.CharField(default='', max_length=20)),
                ('order', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True, verbose_name='Использовать')),
                ('file', models.FileField(blank=True, default='', max_length=256, null=True, upload_to='doc/', verbose_name='Документ')),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='EmailSettings',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('verbal', models.CharField(max_length=100, verbose_name='Verbal')),
                ('subject', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Subject')),
                ('text', models.TextField(blank=True, default='', null=True, verbose_name='Text')),
                ('layout_template', models.CharField(blank=True, default='', max_length=250, null=True, verbose_name='Layout template')),
                ('mail_template', models.CharField(default='', max_length=250, verbose_name='Mail template')),
                ('parameters', models.JSONField(blank=True, default=dict, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Faqtabl',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('faq_enable', models.BooleanField(default=True)),
                ('faq_order', models.IntegerField(default=0)),
                ('faq_title', models.CharField(default='', max_length=200)),
                ('faq_info', models.CharField(default='', max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='FeedbackStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('caption', models.CharField(default='', max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Game_history',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('ticket_ext', models.TextField(blank=True, default='', verbose_name='Ticket List ext')),
                ('ticket_list', models.JSONField(blank=True, default=dict, null=True, verbose_name='Ticket List')),
                ('ticket_num', models.IntegerField(default=0, verbose_name='Ticket number')),
                ('ticket_sum', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Ticket sum')),
                ('user_ip', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='Start Game Ip')),
                ('dt_add', models.DateTimeField(blank=True, null=True, verbose_name='Date ADD')),
                ('dt_start', models.DateTimeField(blank=True, null=True, verbose_name='Date START')),
                ('dt_stop', models.DateTimeField(blank=True, null=True, verbose_name='Date STOP')),
                ('history', models.TextField(blank=True, default='', verbose_name='History')),
            ],
        ),
        migrations.CreateModel(
            name='GameLottoResults',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('lottery_number', models.IntegerField(verbose_name='Lottery number')),
                ('draw_date', models.DateTimeField(verbose_name='Datetime of draw')),
                ('result', models.JSONField(default=dict, verbose_name='Result')),
                ('win_money', models.CharField(default='', max_length=100, verbose_name='Prize fund')),
            ],
        ),
        migrations.CreateModel(
            name='GameType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('caption', models.CharField(max_length=100)),
                ('verbal', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Globalset',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=50)),
                ('type', models.CharField(blank=True, choices=[('txt', 'txt'), ('int', 'int'), ('bool', 'bool')], default='txt', max_length=20, null=True, verbose_name='Type')),
                ('value', models.TextField()),
                ('description', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='IdConfirmationStatus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('caption', models.CharField(default='', max_length=50, verbose_name='Name')),
                ('verbal', models.CharField(default='', max_length=10, verbose_name='Code')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
            ],
        ),
        migrations.CreateModel(
            name='IdRejectReason',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('caption', models.CharField(default='', max_length=250, verbose_name='Name')),
                ('verbal', models.CharField(default='', max_length=10, verbose_name='Code')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
            ],
        ),
        migrations.CreateModel(
            name='LayoutScript',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('ordering', models.IntegerField(default=0, verbose_name='Ordering')),
                ('js_script', models.TextField(verbose_name='JS Script')),
                ('file_location', models.CharField(choices=[('main', 'main'), ('cab', 'cabinet')], max_length=5, verbose_name='File')),
                ('script_location', models.CharField(choices=[('ht', 'head top'), ('hb', 'head bottom'), ('bt', 'body top'), ('bb', 'body bottom')], max_length=2, verbose_name='Script location')),
                ('description', models.CharField(blank='True', max_length=250, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='List_external_company',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('verbal', models.CharField(blank=True, default='', max_length=40, null=True, verbose_name='Code')),
                ('caption', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Caption')),
                ('status', models.CharField(blank=True, choices=[('00', 'Comp1'), ('01', 'Comp2')], default='', max_length=2, null=True, verbose_name='Status')),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('api_token', models.CharField(default='', max_length=100, unique=True, verbose_name='Api Token')),
                ('type_mode', models.CharField(blank=True, choices=[('00', 'Test'), ('77', 'Prod')], default='00', max_length=2, null=True, verbose_name='Type Mode')),
                ('game_start', models.BooleanField(default=False, verbose_name='Game Start')),
            ],
        ),
        migrations.CreateModel(
            name='List_jellyfish',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('verbal', models.CharField(blank=True, default='', max_length=40, null=True, unique=True, verbose_name='Code')),
                ('caption', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Caption')),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('ipadres', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ip adres')),
                ('api_token', models.CharField(default='', max_length=100, unique=True, verbose_name='Api Token')),
            ],
        ),
        migrations.CreateModel(
            name='LottoSubscription',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date_created', models.DateTimeField(verbose_name='Date created')),
                ('date_paid', models.DateTimeField(blank=True, null=True, verbose_name='Date paid')),
                ('enabled', models.BooleanField(default=False)),
                ('games_count', models.IntegerField(default=0)),
                ('infinity', models.BooleanField(default=False)),
                ('automatic', models.BooleanField(default=False)),
                ('ticket_info', models.JSONField(blank=True, default=dict, null=True)),
                ('ticket_cost_1', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name=' Ticket Cost 1')),
                ('ticket_cost_2', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Ticket Cost 2')),
                ('subscription_cost', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Subscription cost')),
            ],
        ),
        migrations.CreateModel(
            name='MessWhatsapp',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('verbal', models.CharField(max_length=50, unique=True, verbose_name='Verbal code')),
                ('caption', models.CharField(blank=True, max_length=100, null=True, verbose_name='Caption')),
                ('id_instance', models.CharField(max_length=150, verbose_name='ID Instance')),
                ('api_token', models.TextField(verbose_name='API Token')),
                ('api_url', models.CharField(max_length=250, verbose_name='API Url')),
                ('max_users', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='NotificationSystem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('new', models.BooleanField(default=True)),
                ('verbal', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('created', models.DateTimeField()),
                ('dt_start', models.DateTimeField(verbose_name='Date START')),
                ('dt_stop', models.DateTimeField(verbose_name='Date STOP')),
                ('text', models.TextField(blank=True, default='', verbose_name='Text')),
                ('description', models.CharField(blank='True', max_length=250, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='NotificationUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('user_id', models.IntegerField(default=0)),
                ('new', models.BooleanField(default=True)),
                ('verbal', models.CharField(blank=True, default='', max_length=20, null=True)),
                ('created', models.DateTimeField()),
                ('dt_start', models.DateTimeField(verbose_name='Date START')),
                ('dt_stop', models.DateTimeField(verbose_name='Date STOP')),
                ('text', models.TextField(blank=True, default='', verbose_name='Text')),
                ('description', models.CharField(blank='True', max_length=250, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0)),
                ('enabled', models.BooleanField(default=True, verbose_name='Использовать')),
                ('url', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('company', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('text', models.TextField(default='', max_length=380)),
                ('image', models.ImageField(blank=True, default='', null=True, upload_to='partner_opinion/')),
            ],
        ),
        migrations.CreateModel(
            name='PayResponse',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('merchantAccount', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('orderReference', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('merchantSignature', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('amount', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('currency', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('authCode', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('email', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('phone', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('createdDate', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('processingDate', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('cardPan', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('cardType', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('issuerBankCountry', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('issuerBankName', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('recToken', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('transactionStatus', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('reason', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('reasonCode', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('fee', models.CharField(blank=True, default='', max_length=256, null=True)),
                ('paymentSystem', models.CharField(blank=True, default='', max_length=256, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Report_list',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('verbal', models.CharField(blank=True, default='', max_length=20, null=True, unique=True, verbose_name='Code')),
                ('caption', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Caption')),
                ('status', models.CharField(blank=True, choices=[('00', 'READY'), ('01', 'BUSY')], default='', max_length=2, null=True, verbose_name='Status')),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('settings', models.JSONField(blank=True, default=dict, null=True)),
                ('config_data', models.JSONField(blank=True, default=dict, null=True)),
                ('export', models.BooleanField(default=True, verbose_name='Export')),
                ('export_template', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Template excel')),
                ('template', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Template')),
                ('add_param', models.JSONField(blank=True, default=dict, null=True)),
                ('export_add', models.BooleanField(default=True, verbose_name='Export add')),
                ('export_add_temp', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Template add ')),
                ('export_add_name', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Template add name')),
                ('description', models.TextField(blank=True, default='', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='SiteLang',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(blank=True, default=0, null=True, verbose_name='Очередность')),
                ('lang_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Названия языка')),
                ('lang_code', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Код языка')),
                ('enabled', models.BooleanField(default=True, verbose_name='Использовать')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='SiteSkin',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(blank=True, default=0, null=True, verbose_name='Очередность')),
                ('name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Названия')),
                ('code', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='Код')),
                ('enabled', models.BooleanField(default=True, verbose_name='Использовать')),
            ],
            options={
                'ordering': ('order',),
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('creator', models.CharField(blank=True, choices=[('00', 'Manager'), ('01', 'User')], default='00', max_length=2, null=True, verbose_name='Creator')),
                ('dt_add', models.DateTimeField(verbose_name='Date ADD')),
                ('dt_modified', models.DateTimeField(blank=True, null=True, verbose_name='Date modified')),
                ('dt_start', models.DateTimeField(verbose_name='Date START')),
                ('dt_stop', models.DateTimeField(verbose_name='Date STOP')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('ticket_list', models.JSONField(blank=True, default=dict, null=True, verbose_name='Ticket List')),
                ('day_1', models.BooleanField(default=False, verbose_name='San')),
                ('day_2', models.BooleanField(default=False, verbose_name='Mon')),
                ('day_3', models.BooleanField(default=False, verbose_name='Tue')),
                ('day_4', models.BooleanField(default=False, verbose_name='Wed')),
                ('day_5', models.BooleanField(default=False, verbose_name='Thu')),
                ('day_6', models.BooleanField(default=False, verbose_name='Fri')),
                ('day_7', models.BooleanField(default=False, verbose_name='Sat')),
                ('time_1', models.CharField(default='00.00', max_length=5, verbose_name='Time San')),
                ('time_2', models.CharField(default='00.00', max_length=5, verbose_name='Time Mon')),
                ('time_3', models.CharField(default='00.00', max_length=5, verbose_name='Time Tue')),
                ('time_4', models.CharField(default='00.00', max_length=5, verbose_name='Time Wed')),
                ('time_5', models.CharField(default='00.00', max_length=5, verbose_name='Time Thu')),
                ('time_6', models.CharField(default='00.00', max_length=5, verbose_name='Time Fri')),
                ('time_7', models.CharField(default='00.00', max_length=5, verbose_name='Time Sat')),
                ('amount_subs', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Amount_subs')),
                ('amount_add', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Amount_add')),
                ('amount_total', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Amount_total')),
                ('paid_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Paid amount')),
                ('paid_date', models.DateTimeField(blank=True, null=True, verbose_name='Paid Date')),
                ('auto_pay', models.BooleanField(default=False, verbose_name='Auto Payment')),
                ('last_pay', models.BooleanField(default=True, verbose_name='Last Pay OK')),
                ('auto_pay_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Auto Pay Amount')),
                ('auto_pay_day', models.IntegerField(default=0, verbose_name='Auto Pay Day')),
                ('total_tickets_amount', models.IntegerField(default=0, verbose_name='Total tickets amount')),
                ('total_days_amount', models.IntegerField(default=0, verbose_name='Total days amount')),
                ('description', models.TextField(blank=True, default='')),
                ('bonus', models.FloatField(blank=True, default=0, null=True, verbose_name='Bonus')),
                ('history', models.TextField(blank=True, default='', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='SubsManager',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('name', models.CharField(max_length=150, verbose_name='Name')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='Task_status',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('caption', models.CharField(default='', max_length=100)),
                ('verbal', models.CharField(default='', max_length=30)),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Task_subs_status',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('caption', models.CharField(default='', max_length=100)),
                ('verbal', models.CharField(default='', max_length=30)),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Task_type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('caption', models.CharField(default='', max_length=100)),
                ('verbal', models.CharField(default='', max_length=30)),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Type_balanceoperation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('caption', models.CharField(default='', max_length=100)),
                ('verbal', models.CharField(default='', max_length=30)),
                ('verbal_payment', models.CharField(blank=True, default='', max_length=30)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('max_win', models.IntegerField(default=0, verbose_name='Max win')),
                ('for_balance', models.CharField(blank=True, default='', max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='Type_balanceoperation_status',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('caption', models.CharField(default='', max_length=100, verbose_name='Caption')),
                ('verbal', models.CharField(default='', max_length=30, verbose_name='Varbal')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
            ],
        ),
        migrations.CreateModel(
            name='Type_blacklist',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('caption', models.CharField(default='', max_length=100)),
                ('verbal', models.CharField(default='', max_length=30)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
            ],
        ),
        migrations.CreateModel(
            name='Type_currency',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(blank=True, default=0, null=True, verbose_name='Очередность')),
                ('code', models.CharField(default='', max_length=10)),
                ('caption', models.CharField(default='', max_length=100)),
                ('verbal', models.CharField(default='', max_length=10)),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='Type_game_status',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('caption', models.CharField(default='', max_length=100, verbose_name='Caption')),
                ('verbal', models.CharField(default='', max_length=30, verbose_name='Varbal')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
            ],
        ),
        migrations.CreateModel(
            name='Type_payment',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('caption', models.CharField(default='', max_length=100)),
                ('verbal', models.CharField(default='', max_length=30)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('is_active', models.BooleanField(default=True, verbose_name='Active')),
                ('subs_enabled', models.BooleanField(default=False, verbose_name='Enabled for subscription')),
                ('max_win', models.IntegerField(default=0, verbose_name='Max win')),
                ('foto_1', models.ImageField(blank=True, default='', null=True, upload_to='ticket/payment/', verbose_name='Logo')),
                ('description_01', models.TextField(blank=True, default='')),
                ('description_02', models.TextField(blank=True, default='')),
                ('popup', models.BooleanField(default=False, verbose_name='Popup')),
                ('txt_warning', models.CharField(blank=True, default='', max_length=1000, verbose_name='Popup message')),
                ('link_redirect', models.CharField(blank=True, default='', max_length=100, verbose_name='Link action')),
            ],
        ),
        migrations.CreateModel(
            name='Type_program',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('caption', models.CharField(default='', max_length=100)),
                ('verbal', models.CharField(default='', max_length=30)),
                ('description', models.TextField(blank=True, default='')),
            ],
        ),
        migrations.CreateModel(
            name='TypeTicketType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('in_play', models.BooleanField(default=True, verbose_name='in_play')),
                ('verbal', models.CharField(default='', max_length=30, verbose_name='Verbal code')),
                ('caption', models.CharField(default='', max_length=100, verbose_name='Caption')),
                ('foto_1', models.ImageField(blank=True, default='', null=True, upload_to='ticket/type_img/', verbose_name='Foto 1')),
                ('foto_2', models.ImageField(blank=True, default='', null=True, upload_to='ticket/type_img/', verbose_name='Foto 2')),
                ('order', models.IntegerField(blank=True, default=0, null=True, verbose_name='Ordering')),
            ],
        ),
        migrations.CreateModel(
            name='UserPayCard',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dt_lastpay', models.DateTimeField(blank=True, null=True, verbose_name='Date last')),
                ('tranzila_tk', models.CharField(max_length=100)),
                ('ccno', models.CharField(blank=True, default='', max_length=10)),
                ('mask_card', models.CharField(blank=True, default='', max_length=20)),
                ('myid', models.CharField(blank=True, default='', max_length=20)),
                ('expmonth', models.CharField(blank=True, default='', max_length=2)),
                ('expyear', models.CharField(blank=True, default='', max_length=4)),
                ('description', models.CharField(blank='True', max_length=250, null=True, verbose_name='Description')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_paycard', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket_type',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('caption', models.CharField(default='', max_length=100)),
                ('verbal', models.CharField(default='', max_length=30)),
                ('verbal_jellyfish', models.CharField(default='', max_length=30)),
                ('verbal_government', models.CharField(default='', max_length=30)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('in_play', models.BooleanField(default=True, verbose_name='in_play')),
                ('order', models.IntegerField(default=0, verbose_name='Order')),
                ('max_win', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Max win')),
                ('foto_1', models.ImageField(blank=True, default='', null=True, upload_to='ticket/img/', verbose_name='Foto 1')),
                ('foto_2', models.ImageField(blank=True, default='', null=True, upload_to='ticket/img/', verbose_name='Foto 2')),
                ('cost_1', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Cost 1')),
                ('cost_2', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Cost 2')),
                ('approx_time', models.IntegerField(default=0, verbose_name='Approx time')),
                ('description_01', models.TextField(blank=True, default='')),
                ('description_02', models.TextField(blank=True, default='')),
                ('description_03', models.TextField(blank=True, default='')),
                ('description_04', models.TextField(blank=True, default='')),
                ('description_05', models.TextField(blank=True, default='')),
                ('min_t', models.IntegerField(default=0, verbose_name='Min ticket')),
                ('max_t', models.IntegerField(default=0, verbose_name='Max ticket')),
                ('subs_enabled', models.BooleanField(default=True, verbose_name='Enabled for subscription')),
                ('subs_order', models.IntegerField(default=0, verbose_name='Order in subscription list')),
                ('subs_description', models.TextField(blank=True, default='', verbose_name='Description for subscription list')),
                ('subs_setting', models.JSONField(default=el_t01_app.models.ticket_type_subs_settings_default, verbose_name='Settings for subscription')),
                ('setting', models.JSONField(blank=True, default=dict, null=True, verbose_name='Settings')),
                ('t_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='type_ticket_type', to='el_t01_app.typetickettype', verbose_name='Type')),
                ('type_currency', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_type_currency', to='el_t01_app.type_currency', verbose_name='currency')),
                ('type_program', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_type_program', to='el_t01_app.type_program', verbose_name='Version program')),
            ],
        ),
        migrations.CreateModel(
            name='Ticket_history',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('status', models.CharField(blank=True, choices=[('00', 'start'), ('01', 'ready'), ('02', 'wait confirm'), ('03', 'error SOD'), ('30', 'error'), ('33', 'finish game')], default='00', max_length=2, null=True, verbose_name='Status')),
                ('req_id', models.CharField(blank=True, default='', max_length=50, null=True, unique=True, verbose_name='Код запроса')),
                ('req_dt', models.DateTimeField(blank=True, null=True, verbose_name='Дата запроса')),
                ('answ_dt', models.DateTimeField(blank=True, null=True, verbose_name='Дата ответа')),
                ('answ_nom', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Номер билета')),
                ('answ_nom_00', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Номер билета 00')),
                ('answ_lottery_number', models.IntegerField(blank=True, null=True, verbose_name='Номер лотереи')),
                ('answ_tabl', models.JSONField(blank=True, default=dict, null=True, verbose_name='Таблица билета')),
                ('answ_option', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='Option билета')),
                ('answ_option_00', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='Option билета 00')),
                ('answ_win', models.BooleanField(default=False, verbose_name='Выигрыш')),
                ('answ_win_00', models.BooleanField(default=False, verbose_name='Выигрыш 00')),
                ('answ_win_sum', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='Сумма выигрыша')),
                ('answ_win_sum_00', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='Сумма выигрыша 00')),
                ('error_job', models.TextField(blank=True, default='', verbose_name='Error JOB')),
                ('step_job', models.TextField(blank=True, default='', verbose_name='Step JOB')),
                ('step_ticket', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='Step билета')),
                ('img_01', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Img 01 с камеры 01')),
                ('img_02', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Img 02 с камеры 02')),
                ('img_03', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Img 03 обрезаный 01')),
                ('img_04', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Img 04 обрезаный 02')),
                ('img_05', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Img 05 бланк 01')),
                ('img_06', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Img 06 бланк 02')),
                ('img_07', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Img 07 бланк 01 мал')),
                ('img_08', models.CharField(blank=True, default='', max_length=200, null=True, verbose_name='Img 08 бланк 02 мал')),
                ('balance_01', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Balance befor')),
                ('cost_1', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Cost Tiket 1')),
                ('cost_02', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Cost Tiket 2')),
                ('cost_discount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Discount')),
                ('cost_2', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Cost Tiket 2 with Discount')),
                ('balance_02', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Balance after')),
                ('recipient_balance_01', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Balance befor')),
                ('recipient_balance_02', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Recipient Balance after')),
                ('hash', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('t_check', models.BooleanField(default=False, verbose_name='Check')),
                ('t_check_dt', models.DateTimeField(blank=True, null=True, verbose_name='Date check')),
                ('t_cabala_dt', models.DateTimeField(blank=True, null=True, verbose_name='Date cabala')),
                ('game_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='game_type_history', to='el_t01_app.ticket_type', verbose_name='Type GAME')),
                ('games_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='games_id_history', to='el_t01_app.game_history', verbose_name='Game Id')),
                ('lotto_result', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='el_t01_app.gamelottoresults', verbose_name='Номер результата')),
                ('t_check_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='check_user', to=settings.AUTH_USER_MODEL, verbose_name='User check')),
                ('t_dev', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='dev_id', to='el_t01_app.devices_list', verbose_name='Dev Id')),
            ],
        ),
        migrations.CreateModel(
            name='Task_subs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dt_start', models.DateTimeField(blank=True, null=True, verbose_name='Date START')),
                ('dt_stop', models.DateTimeField(blank=True, null=True, verbose_name='Date STOP')),
                ('task_ok', models.TextField(blank=True, default='', verbose_name='Subs OK')),
                ('task_error', models.TextField(blank=True, default='', verbose_name='Subs ERROR')),
                ('task_ok_num', models.IntegerField(default=0, verbose_name='Count OK')),
                ('task_error_num', models.IntegerField(default=0, verbose_name='Count ERROR')),
                ('t_status', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='t_task_subs_status', to='el_t01_app.task_subs_status', verbose_name='Status')),
            ],
        ),
        migrations.CreateModel(
            name='Task_history',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('task_name', models.TextField(blank=True, default='', verbose_name='Task name')),
                ('task_user', models.TextField(blank=True, default='', verbose_name='Task user')),
                ('task_user_ok', models.TextField(blank=True, default='', verbose_name='Task user OK')),
                ('task_num', models.IntegerField(default=0, verbose_name='Count users')),
                ('task_num_ok', models.IntegerField(default=0, verbose_name='Count users')),
                ('task_text', models.TextField(blank=True, default='', verbose_name='Task text')),
                ('subject', models.TextField(blank=True, default='', null=True, verbose_name='Subject')),
                ('task_add_conf1', models.BooleanField(blank=True, default=False)),
                ('dt_plan', models.DateTimeField(blank=True, null=True, verbose_name='Date Plan')),
                ('dt_add', models.DateTimeField(blank=True, null=True, verbose_name='Date ADD')),
                ('dt_start', models.DateTimeField(blank=True, null=True, verbose_name='Date START')),
                ('dt_stop', models.DateTimeField(blank=True, null=True, verbose_name='Date STOP')),
                ('image', models.ImageField(blank=True, default='', null=True, upload_to='tasks/', verbose_name='Image')),
                ('t_status', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='t_task_status', to='el_t01_app.task_status', verbose_name='Status')),
                ('t_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='t_task_type', to='el_t01_app.task_type', verbose_name='Type')),
            ],
        ),
        migrations.CreateModel(
            name='SubsTranzillaAnswer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('answer_type', models.CharField(blank=True, default='', max_length=20)),
                ('answer', models.TextField(blank=True, default='')),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('balance_operation_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='subs_payment_answers', to='el_t01_app.balanceoperation', verbose_name='BalanceOperation number')),
            ],
        ),
        migrations.CreateModel(
            name='SubsSmsToSend',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('hash', models.CharField(default='', max_length=100)),
                ('recipient', models.CharField(default='', max_length=100, verbose_name='Phone number')),
                ('html_message', models.TextField(blank=True, default='')),
                ('request', models.TextField(blank=True, default='')),
                ('answer', models.TextField(blank=True, default='')),
                ('dt_add', models.DateTimeField(blank=True, null=True, verbose_name='Date ADD')),
                ('dt_plan', models.DateTimeField(blank=True, null=True, verbose_name='Date PLAN')),
                ('dt_start', models.DateTimeField(blank=True, null=True, verbose_name='Date START')),
                ('dt_stop', models.DateTimeField(blank=True, null=True, verbose_name='Date STOP')),
                ('t_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='t_subs_sms_game', to='el_t01_app.game_history', verbose_name='Game Id')),
                ('t_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='t_sms_subs_status', to='el_t01_app.task_subs_status', verbose_name='Status')),
                ('t_subs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='t_subs_sms', to='el_t01_app.subscription', verbose_name='Subscription')),
                ('t_task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='t_sms_task_subs', to='el_t01_app.task_subs', verbose_name='Task sms')),
            ],
        ),
        migrations.AddField(
            model_name='subscription',
            name='manager',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subs_manager', to='el_t01_app.subsmanager', verbose_name='Manager'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='type_payment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subs_type_payment', to='el_t01_app.type_payment', verbose_name='Payment type'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='u_paycard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subs_paycard', to='el_t01_app.userpaycard', verbose_name='Pay Card'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subs_user', to=settings.AUTH_USER_MODEL, verbose_name='User subs'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='user_id_creator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subs_user_creator', to=settings.AUTH_USER_MODEL, verbose_name='User subs creator'),
        ),
        migrations.CreateModel(
            name='SubsBonus',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('for_all', models.BooleanField(default=True, verbose_name='For all managers')),
                ('min_days', models.IntegerField(default=0, verbose_name='Minimum number of days')),
                ('max_days', models.IntegerField(default=0, verbose_name='Maximum number of days')),
                ('bonus_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Fixed bonus')),
                ('bonus_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Percentage bonus')),
                ('manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subs_managers', to='el_t01_app.subsmanager', verbose_name='For a specific manager')),
                ('ticket_type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ticket_type_subs_managers', to='el_t01_app.ticket_type', verbose_name='Ticket type')),
                ('type_payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subs_bonus_type_payment', to='el_t01_app.type_payment', verbose_name='Payment type')),
            ],
        ),
        migrations.CreateModel(
            name='SubsAutoPay',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('p_status', models.BooleanField(default=False, verbose_name='Success')),
                ('request', models.TextField(blank=True, default='')),
                ('answer', models.TextField(blank=True, default='')),
                ('dt_start', models.DateTimeField(blank=True, null=True, verbose_name='Date request')),
                ('dt_stop', models.DateTimeField(blank=True, null=True, verbose_name='Date answer')),
                ('p_lotto_subs', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='p_lotto_subs', to='el_t01_app.lottosubscription', verbose_name='Lotto Subscription')),
                ('p_subs', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='p_subs', to='el_t01_app.subscription', verbose_name='Subscription')),
            ],
        ),
        migrations.CreateModel(
            name='SmsToSend',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('subject', models.TextField(blank=True, default='', max_length=200)),
                ('recipient', models.TextField(blank=True, default='', max_length=200)),
                ('html_message', models.TextField(blank=True, default='')),
                ('sent', models.TextField(blank=True, default='')),
                ('hash', models.CharField(max_length=100, unique=True)),
                ('request', models.TextField(blank=True, default='')),
                ('answer', models.TextField(blank=True, default='')),
                ('dt_add', models.DateTimeField(blank=True, null=True, verbose_name='Date ADD')),
                ('dt_start', models.DateTimeField(blank=True, null=True, verbose_name='Date START')),
                ('dt_stop', models.DateTimeField(blank=True, null=True, verbose_name='Date STOP')),
                ('t_task', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='t_task_history', to='el_t01_app.task_history', verbose_name='Task')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='sms_user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default='', max_length=500)),
                ('date_joined', models.DateTimeField(null=True)),
                ('date_birthday', models.DateField(null=True, verbose_name='Birthday')),
                ('user_confirmed', models.CharField(blank=True, choices=[('00', 'Новый'), ('01', 'Подтвержден'), ('02', 'Заблокирован')], default='00', max_length=2, null=True, verbose_name='Статус пользователя')),
                ('user_level', models.CharField(blank=True, choices=[('00', 'Admin'), ('01', 'user'), ('02', 'user 2'), ('03', 'user 3')], default='00', max_length=2, null=True, verbose_name='Уровень пользователя')),
                ('hash', models.CharField(blank=True, default='', max_length=128, null=True)),
                ('mail_confirmed', models.BooleanField(default=False)),
                ('mobile_code', models.CharField(blank=True, default='', max_length=10, null=True)),
                ('mobile', models.CharField(blank=True, default='', max_length=500, null=True)),
                ('mobile_confirmed', models.BooleanField(default=False)),
                ('mail_subs', models.BooleanField(default=False)),
                ('is_deleted', models.BooleanField(default=False)),
                ('notifications', models.IntegerField(default=0)),
                ('is_boss', models.BooleanField(default=False)),
                ('is_manager', models.BooleanField(default=False)),
                ('is_moderator', models.BooleanField(default=False)),
                ('first_login', models.BooleanField(default=True)),
                ('i_doc', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='ID')),
                ('i_foto', models.ImageField(blank=True, default='', null=True, upload_to='profile/img/', verbose_name='ID foto')),
                ('i_photo_face', models.ImageField(blank=True, default='', null=True, upload_to='profile/img/', verbose_name='Photo face')),
                ('i_confirmed', models.BooleanField(blank=True, default=False, null=True, verbose_name='ID confirmed')),
                ('city', models.CharField(blank=True, default='', max_length=150, null=True, verbose_name='City')),
                ('street', models.CharField(blank=True, default='', max_length=150, null=True, verbose_name='Street')),
                ('building', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Building')),
                ('apartments', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='Apartments')),
                ('balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('balance_pre', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('language', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('max_ticket_d', models.IntegerField(default=0)),
                ('max_ticket_m', models.IntegerField(default=0)),
                ('max_sum_d', models.IntegerField(default=0)),
                ('max_sum_m', models.IntegerField(default=0)),
                ('tranzila_token', models.CharField(blank=True, default='', max_length=50, null=True)),
                ('reklama', models.BooleanField(default=False, verbose_name='Reklama')),
                ('settings', models.JSONField(blank=True, default=dict, null=True)),
                ('mess_whatsapp', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='mess_whatsapp_users', to='el_t01_app.messwhatsapp', verbose_name='Mess whatsapp instance')),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Payout',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(verbose_name='Data create')),
                ('status', models.CharField(choices=[('00', 'NEW'), ('01', 'OK'), ('02', 'REJECT'), ('04', 'IN PROCESS')], default='00', max_length=2, verbose_name='Status')),
                ('acc_name', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Account Name')),
                ('name_bank', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Name Bank')),
                ('branch', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Branch number')),
                ('acc_num', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Account number')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Amount')),
                ('percent', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Percent')),
                ('amount_minus_percent', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Amount minus percent')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('reject_reason', models.TextField(blank=True, default='', null=True, verbose_name='Rejection reason')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='payouts/', verbose_name='Photo')),
                ('t_check', models.BooleanField(default=False, verbose_name='OK')),
                ('t_check_dt', models.DateTimeField(blank=True, null=True, verbose_name='Date check')),
                ('bal_oper', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='el_t01_app.balanceoperation', verbose_name='Operation')),
                ('t_check_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payout_check_user', to=settings.AUTH_USER_MODEL, verbose_name='User check')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payout_user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='PaymentAnswer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('payment_index', models.CharField(max_length=100, unique=True)),
                ('created_date', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(blank=True, default='', max_length=3, null=True, verbose_name='Status payment from payment system')),
                ('json_data', models.JSONField(blank=True, default=dict, null=True)),
                ('text_data', models.TextField(blank=True, default='', null=True)),
                ('balance_operation_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payment_answers', to='el_t01_app.balanceoperation', verbose_name='BalanceOperation number')),
            ],
        ),
        migrations.CreateModel(
            name='Payadd',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(verbose_name='Data create')),
                ('status', models.CharField(choices=[('00', 'NEW'), ('01', 'OK'), ('02', 'BLOCK')], default='00', max_length=2, verbose_name='Status')),
                ('acc_name', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Account Name')),
                ('name_bank', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Name Bank')),
                ('branch', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Branch number')),
                ('acc_num', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Account number')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Amount')),
                ('upload_doc', models.FileField(blank=True, default='', null=True, upload_to='users/doc_add/', verbose_name='Doc')),
                ('t_check', models.BooleanField(default=False, verbose_name='OK')),
                ('t_check_dt', models.DateTimeField(blank=True, null=True, verbose_name='Date check')),
                ('bal_oper', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='el_t01_app.balanceoperation', verbose_name='Operation')),
                ('t_check_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payadd_check_user', to=settings.AUTH_USER_MODEL, verbose_name='User check')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='payadd_user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.AddField(
            model_name='lottosubscription',
            name='ticket_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lotto_subscription_ticket_type', to='el_t01_app.ticket_type', verbose_name='Ticket type'),
        ),
        migrations.AddField(
            model_name='lottosubscription',
            name='u_paycard',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lotto_subs_paycard', to='el_t01_app.userpaycard', verbose_name='Pay Card'),
        ),
        migrations.AddField(
            model_name='lottosubscription',
            name='user_owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lotto_subscription_user', to=settings.AUTH_USER_MODEL, verbose_name='User owner'),
        ),
        migrations.CreateModel(
            name='IdConfirmation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dt_add', models.DateTimeField(verbose_name='Date ADD')),
                ('photo_id', models.ImageField(blank=True, default='', null=True, upload_to='id_confirms/', verbose_name='Photo id')),
                ('photo_face', models.ImageField(blank=True, default='', null=True, upload_to='id_confirms/', verbose_name='Photo face')),
                ('photo_id_preview', models.URLField(blank=True, default='', null=True, verbose_name='Url Photo id thumb')),
                ('photo_face_preview', models.URLField(blank=True, default='', null=True, verbose_name='Url Photo face thumb')),
                ('check', models.BooleanField(default=False, verbose_name='Check')),
                ('check_dt', models.DateTimeField(blank=True, null=True, verbose_name='Date admin review')),
                ('description', models.TextField(blank=True, default='', verbose_name='Description')),
                ('reject_reason', models.TextField(blank=True, default='', verbose_name='Rejection reason')),
                ('add_param', models.JSONField(blank=True, default=dict, null=True)),
                ('check_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='check_id_conf_user', to=settings.AUTH_USER_MODEL, verbose_name='User check')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='id_conf_status', to='el_t01_app.idconfirmationstatus', verbose_name='Status')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='user_id_conf', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='GiftSmsToSend',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('hash', models.CharField(default='', max_length=100)),
                ('recipient', models.CharField(default='', max_length=100, verbose_name='Phone number')),
                ('html_message', models.TextField(blank=True, default='')),
                ('request', models.TextField(blank=True, default='')),
                ('answer', models.TextField(blank=True, default='')),
                ('dt_add', models.DateTimeField(blank=True, null=True, verbose_name='Date ADD')),
                ('dt_plan', models.DateTimeField(blank=True, null=True, verbose_name='Date PLAN')),
                ('dt_start', models.DateTimeField(blank=True, null=True, verbose_name='Date START')),
                ('dt_stop', models.DateTimeField(blank=True, null=True, verbose_name='Date STOP')),
                ('add_param', models.JSONField(blank=True, default=dict, null=True)),
                ('t_game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='t_gift_sms_game', to='el_t01_app.game_history', verbose_name='Game Id')),
                ('t_status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='t_sms_gift_status', to='el_t01_app.task_subs_status', verbose_name='Status')),
            ],
        ),
        migrations.AddField(
            model_name='gamelottoresults',
            name='lotto_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='type_ticket_type_results', to='el_t01_app.typetickettype', verbose_name='Lotto Type'),
        ),
        migrations.AddField(
            model_name='gamelottoresults',
            name='ticket_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_type_results', to='el_t01_app.ticket_type', verbose_name='Type ticket'),
        ),
        migrations.CreateModel(
            name='GameLottoProfit',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('profit_type', models.CharField(blank=True, choices=[('00', 'Amount'), ('01', 'Percent')], default='', max_length=2, null=True, verbose_name='Profit type')),
                ('profit_rounding', models.CharField(blank=True, choices=[('00', 'Round off mathematically'), ('01', 'To the biggest integer')], default='', max_length=2, null=True, verbose_name='Profit rounding')),
                ('sum_from', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='From sum')),
                ('sum_to', models.DecimalField(decimal_places=2, max_digits=15, verbose_name='To sum')),
                ('amount_profit', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Amount profit')),
                ('percent_profit', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Percent profit')),
                ('ticket_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_type_profits', to='el_t01_app.ticket_type', verbose_name='Type ticket')),
            ],
        ),
        migrations.AddField(
            model_name='game_history',
            name='game_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='game_game_type', to='el_t01_app.gametype', verbose_name='Game type'),
        ),
        migrations.AddField(
            model_name='game_history',
            name='t_company',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='t_company', to='el_t01_app.list_external_company', verbose_name='Company'),
        ),
        migrations.AddField(
            model_name='game_history',
            name='t_discount',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='game_h_discount', to='el_t01_app.discounthistory', verbose_name='Discount'),
        ),
        migrations.AddField(
            model_name='game_history',
            name='t_lotto_subs',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='t_lotto_subs', to='el_t01_app.lottosubscription', verbose_name='Lotto Subscription'),
        ),
        migrations.AddField(
            model_name='game_history',
            name='t_payment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='t_payment', to='el_t01_app.type_payment', verbose_name='Payment'),
        ),
        migrations.AddField(
            model_name='game_history',
            name='t_status',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='t_status', to='el_t01_app.type_game_status', verbose_name='Status'),
        ),
        migrations.AddField(
            model_name='game_history',
            name='t_subs',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='t_subs', to='el_t01_app.subscription', verbose_name='Subscription'),
        ),
        migrations.AddField(
            model_name='game_history',
            name='user_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='game_user', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.AddField(
            model_name='game_history',
            name='user_recipient',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='game_user_recipient', to=settings.AUTH_USER_MODEL, verbose_name='User-recipient if gift'),
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Data create')),
                ('u_name', models.CharField(blank=True, default='', max_length=100, null=True, verbose_name='User')),
                ('u_email', models.EmailField(blank=True, default='', max_length=254, null=True, verbose_name='email')),
                ('text', models.TextField(blank=True, default='', max_length=500, null=True, verbose_name='Text req')),
                ('status', models.CharField(choices=[('00', 'NEW'), ('01', 'READY'), ('02', 'BLOCK')], default='00', max_length=2, verbose_name='Status')),
                ('reply_text', models.TextField(blank=True, default='', max_length=2000, null=True, verbose_name='Text ansver')),
                ('reply_date', models.DateTimeField(blank=True, null=True, verbose_name='Date ansver')),
                ('reply_lang', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Lang answer')),
                ('t_check', models.BooleanField(default=False, verbose_name='OK')),
                ('t_check_dt', models.DateTimeField(blank=True, null=True, verbose_name='Date check')),
                ('t_check_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback_check_user', to=settings.AUTH_USER_MODEL, verbose_name='User check')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback_user', to=settings.AUTH_USER_MODEL, verbose_name='User in')),
            ],
        ),
        migrations.CreateModel(
            name='EmailToSend',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dt_add', models.DateTimeField(blank=True, null=True, verbose_name='Date ADD')),
                ('dt_start', models.DateTimeField(blank=True, null=True, verbose_name='Date START')),
                ('dt_stop', models.DateTimeField(blank=True, null=True, verbose_name='Date STOP')),
                ('type', models.TextField(blank=True, default='', max_length=50, null=True)),
                ('subject', models.TextField(blank=True, default='', max_length=200)),
                ('recipient', models.TextField(blank=True, default='', max_length=200)),
                ('html_message', models.TextField(blank=True, default='')),
                ('sent', models.BooleanField(blank=True, default=False)),
                ('hash', models.CharField(default='', max_length=100)),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='email_user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountSet',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Fixed discount')),
                ('discount_percent', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True, verbose_name='Percentage discount')),
                ('description', models.TextField(blank=True, default='', null=True, verbose_name='Description')),
                ('disc', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='discount_set_discounts', to='el_t01_app.discount', verbose_name='Discount')),
                ('ticket_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='discount_set_ticket_type', to='el_t01_app.ticket_type', verbose_name='Ticket')),
            ],
        ),
        migrations.CreateModel(
            name='DiscountList',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('id_owner', models.IntegerField(default=0, verbose_name='Id Owner')),
                ('duration_hours', models.IntegerField(default=0, verbose_name='Duration in hours')),
                ('discount', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='discount_list', to='el_t01_app.discount', verbose_name='Discount type')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='discount_owner', to='el_t01_app.discountowner', verbose_name='Owner')),
            ],
        ),
        migrations.AddField(
            model_name='devices_list',
            name='t_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='ticket_type', to='el_t01_app.ticket_type', verbose_name='Type ticket'),
        ),
        migrations.CreateModel(
            name='CommentCallcenter',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, default='', null=True, verbose_name='Text comment')),
                ('date_return', models.DateField(blank=True, null=True, verbose_name='Date return')),
                ('date_created', models.DateTimeField(verbose_name='Date created')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_callcenter_admin_creator', to='el_t01_app.profile', verbose_name='Admin profile')),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comment_callcenter_user', to='el_t01_app.profile', verbose_name='User profile')),
            ],
        ),
        migrations.CreateModel(
            name='Cashadd',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField(verbose_name='Data create')),
                ('status', models.CharField(choices=[('00', 'NEW'), ('01', 'OK'), ('02', 'BLOCK')], default='00', max_length=2, verbose_name='Status')),
                ('city', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='City')),
                ('street', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Street')),
                ('building', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='Building')),
                ('amount', models.DecimalField(decimal_places=2, default=0, max_digits=15, verbose_name='Amount')),
                ('t_check', models.BooleanField(default=False, verbose_name='OK')),
                ('t_check_dt', models.DateTimeField(blank=True, null=True, verbose_name='Date check')),
                ('bal_oper', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to='el_t01_app.balanceoperation', verbose_name='Operation')),
                ('t_check_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cashadd_check_user', to=settings.AUTH_USER_MODEL, verbose_name='User check')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='cashadd_user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='BloggerRef',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dt_add', models.DateTimeField(verbose_name='Date ADD')),
                ('utm_code', models.CharField(default='', max_length=20)),
                ('u_ip', models.CharField(blank=True, default='', max_length=20, null=True, verbose_name='User Ip')),
                ('http_referer', models.CharField(default='', max_length=150, verbose_name='http_referer')),
                ('blogger', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='t_blogger_refs', to='el_t01_app.blogger', verbose_name='Blogger')),
            ],
        ),
        migrations.AddField(
            model_name='blogger',
            name='b_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='type_bloggers', to='el_t01_app.bloggertype', verbose_name='Type'),
        ),
        migrations.CreateModel(
            name='Blacklist',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created', models.DateTimeField()),
                ('text', models.CharField(default='', max_length=100)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('description', models.TextField(blank=True, default='', null=True)),
                ('create_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Blacklist_user_create', to=settings.AUTH_USER_MODEL, verbose_name='Manager')),
                ('type_blacklist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='type_balanceoperation', to='el_t01_app.type_blacklist', verbose_name='Type operation')),
            ],
        ),
        migrations.CreateModel(
            name='BalRecalculate',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('text', models.TextField(blank=True, default='', max_length=200)),
                ('job', models.TextField(blank=True, default='')),
                ('user_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='BalRecalculate_user', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.AddField(
            model_name='balanceoperation',
            name='games_id',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='balance_games_id', to='el_t01_app.game_history', verbose_name='Game Id'),
        ),
        migrations.AddField(
            model_name='balanceoperation',
            name='lotto_subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='balance_lotto_subscriptions', to='el_t01_app.lottosubscription', verbose_name='Lotto Subscription'),
        ),
        migrations.AddField(
            model_name='balanceoperation',
            name='status',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='type_balanceoperation_status', to='el_t01_app.type_balanceoperation_status', verbose_name='Status'),
        ),
        migrations.AddField(
            model_name='balanceoperation',
            name='subscription',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='balance_subscriptions', to='el_t01_app.subscription', verbose_name='Subscription Id'),
        ),
        migrations.AddField(
            model_name='balanceoperation',
            name='t_create_user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='balance_user_create', to=settings.AUTH_USER_MODEL, verbose_name='Manager create'),
        ),
        migrations.AddField(
            model_name='balanceoperation',
            name='type_balanceoperation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='type_balanceoperation', to='el_t01_app.type_balanceoperation', verbose_name='Type operation'),
        ),
        migrations.AddField(
            model_name='balanceoperation',
            name='user_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='balance_user', to=settings.AUTH_USER_MODEL, verbose_name='User'),
        ),
        migrations.CreateModel(
            name='APIExtHash',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('api_hash', models.CharField(max_length=10, unique=True, verbose_name='Hash')),
                ('api_link', models.CharField(max_length=250, verbose_name='Link')),
                ('dt_add', models.DateTimeField(verbose_name='Date ADD')),
                ('page', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='page_hash', to='el_t01_app.apiextpage', verbose_name='Page to show')),
            ],
        ),
    ]
